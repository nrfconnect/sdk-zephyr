TSTM32CubeF7
###########

Origin:
   ST Microelectronics
   http://www.st.com/en/embedded-software/stm32cubef7.html

Status:
   version 1.12.0

Purpose:
   ST Microelectronics official MCU package for STM32F7 series.

Description:
   This package is an extract of official STM32CubeF7 package written by ST Microelectronics.
   It is composed of STM32Cube hardware abstraction layer (HAL) and low layer (LL) plus a set
   of CMSIS headers files, one for each SoC in STM32F7 series.

Dependencies:
    None.

URL:
   http://www.st.com/en/embedded-software/stm32cubef7.html

commit:
   version 1.12.0

Maintained-by:
   External

License:
   BSD-3-Clause

License Link:
   https://opensource.org/licenses/BSD-3-Clause

Patch List:

   *Current implementation of LL_SPI_TransmitData16 on F3/F7/L4 family
    generates following warning:
    "warning: dereferencing type-punned pointer will break strict-aliasing
    rules [-Wstrict-aliasing]"
    Besides being forbidden by rule, this cast is not needed, as register is
    16 bits wide. Modification has been tested on L4 SoC.
    stm32yyxx_ll_spi.h being included in soc.h file, warning is generated
    at each compiled object, this commit allows a clean build.
    Impacted files:
     drivers/include/stm32f7xx_ll_spi.h
    ST Bug tracker ID: 13359


   *Disable new CAN API and enable Legacy API
     A new CAN API has been delivered on recent F7 stm32cube.
     This new API breaks current CAN driver. Disable the new API and enable the
     legacy API.
     Disable related systematic warning message
    Impacted files:
     CMakeLists.txt
     drivers/include/stm32f7xx_hal_conf.h
     drivers/src/Legacy/stm32f7_hal_can.c

   *Fix LL_EXTI_LINE_18 and LL_EXTI_LINE_20 declarations
     LL_EXTI_LINE_18 and LL_EXTI_LINE_20 are declared in stm32f7xx_hal_pcd.h
     and in stm32f7xx_ll_exti.h which generates warnings. Set #ifndef
     in stm32f7xx_ll_exti.h around declarations.
    Impacted files:
     drivers/include/stm32f7xx_ll_exti.h
    ST Bug tracker ID: 55274

    *Use of (__packed uint32_t *) produces warning
      Using GNU 8.2.0, (__packed uint32_t *) generates warning.
      Replace with CMSIS macros __UNALIGNED_UINT32_READ and
      __UNALIGNED_UINT32_WRITE.
     Impacted files:
      drivers/include/stm32f7xx_ll_usb.c
     ST Bug tracker ID: 61327

    *Fix warnings for extraneous parentheses
      Using clang 7.0.1, if ((htim->State == HAL_TIM_STATE_BUSY))
      generates warnings.  Remove the extra parentheses
     Impacted files:
      drivers/src/stm32f7xx_hal_tim.c
      drivers/src/stm32f7xx_hal_tim_ex.c
     ST Bug tracker ID: 63618
